allprojects {
    apply plugin: "java-library"

    ext {
        gdxVersion = '1.10.0'
        graalvmVersion = '21.3.0'
    }

    group 'com.anyicomplex'
    version gdxVersion + '-beta2'

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation "org.graalvm.nativeimage:svm:$graalvmVersion"
    }

}

dependencies {
    implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
}

subprojects {
    dependencies {
        implementation project(":")
    }
}

project(":backends:lwjgl3") {
    dependencies {
        // Compile GraalVM platform library
        compileOnly "org.graalvm.nativeimage:svm-hosted-native-linux-amd64:$graalvmVersion"
        compileOnly "org.graalvm.nativeimage:svm-hosted-native-windows-amd64:$graalvmVersion"
        compileOnly "org.graalvm.nativeimage:svm-hosted-native-darwin-amd64:$graalvmVersion"
        implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    }
}

project(":extensions:bullet") {
    dependencies {
        implementation "com.badlogicgames.gdx:gdx-bullet:$gdxVersion"
    }
}

configure([
        project(":"),
        project(":backends:lwjgl3"),
        project(":backends:moe"),
        project(":extensions:bullet"),

]) {
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    java {
        withJavadocJar()
        withSourcesJar()
    }
    publishing {
        publications {
            mavenJava(MavenPublication) {
                def idStr = rootProject.name
                if (project.name != rootProject.name) {
                    idStr += "-"
                    idStr += project.parent.name.substring(0, project.parent.name.length() - 1)
                    idStr += "-"
                    idStr += project.name
                }
                artifactId = idStr
                groupId = project.group
                version = project.version
                from components.java
                pom {
                    def nameStr = "libGDX Graal Helper"
                    if (project.name != rootProject.name) {
                        nameStr += " ("
                        nameStr += project.parent.name.substring(0, 1).toUpperCase()
                        nameStr += project.parent.name.substring(1, project.parent.name.length() - 1)
                        nameStr += " "
                        nameStr += project.name.substring(0, 1).toUpperCase()
                        nameStr += project.name.substring(1, project.name.length())
                        nameStr += ")"
                    }
                    name = nameStr
                    description = 'Experimental helper for libGDX to build GraalVM native-image.'
                    url = 'https://github.com/anyicomplex/gdx-graalhelper'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'anyicomplex'
                            name = 'Yi An'
                            email = 'anyicomplex@protonmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git@github.com:anyicomplex/gdx-graalhelper.git'
                        developerConnection = 'scm:git:ssh://github.com/anyicomplex/gdx-graalhelper.git'
                        url = 'https://github.com/anyicomplex/gdx-graalhelper'
                    }
                }
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
            }
        }
        repositories {
            maven {
                def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
                def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
            maven {
                name = "OSSRH"
                url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username = System.getenv("MAVEN_USERNAME")
                    password = System.getenv("MAVEN_TOKEN")
                }
            }
            maven {
                name = "GitHubPackages"
                url = "https://maven.pkg.github.com/anyicomplex/gdx-graalhelper"
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        }
        signing {
            def key = "-----BEGIN PGP PRIVATE KEY BLOCK-----\n" +
                    "\n" +
                    "nQdGBGHwYEgBEACuenl+lKae792OT4FrS2JTtl7IazffZw6/WMRc7ptFC2//Mw4r" +
                    "XuNQCprEgm6LNOZeUTf5tNAZ5Sejyt5wMxJXGQ7R1/nIUGQzsKi+LgK5Bua73Qwb" +
                    "dMWUz8iWZA8yfNtwKkeI7A+j5O8vqOqapbK5GbjIyGQbGaVpEg9W9HBdz8dJxKfa" +
                    "DpNl3dLkjqUDPZqg5xdnt24YibzgNdxv5shzAA7Ft/YtG157wgbVpI3WXKCYYJpu" +
                    "loXpeKKWZeelrSpEWURCJvd8iub0csFWXMM865SAK74pv8pJXex1jfs4l6h4+w6I" +
                    "kMPcG7kDpc0n0ku0i70LQKwGMoLS70WT0tARuaxDpbUlpCMDSFYMDRhvNiWurt6Z" +
                    "NhFEG7K62VFHMmKIXy/OGWu75fWlQdbxtUsbDF78+IR5dbXRMHXLVrcydVv9Jk7E" +
                    "HLNSRgCe81f6j34rWnSfpH5NAjVhNSlU414Xt8aTTtZjTCxOoyw4nZOZso52Sd7L" +
                    "6J5AI5s2UElfdyR7H5XZxNyz3TcgO5F5n+fZ1RgQnP2+O0/UGvuwAnpeq9elzmAQ" +
                    "M0ZTamE0aSmMY74wmrlyTYaXxtA4lQcDgEu/Rxj/YkZdOAfp1h06x54VkMyRH2oF" +
                    "+xF79SNAeoV7Y+O17NS/VoGIOq4Ltyd58LjlkitUX8J65NXsX2m5Y9PHNQARAQAB" +
                    "/gcDAi1yGRVEr6xL+nSx8oWSWAqAK3OIinAs1AJBYqHmltsb/MLEydXUzeK6DSRT" +
                    "BvzX3BApnv3yaR58ucucoJQSiykbNB2o3LMqqUGVbGOArPp0nDG85mtHNyTt+R+6" +
                    "OHLzkVuBLDys1osx0lSQi8AvKjV4WXHitqwoBjXA8518ROeBSdMT/HV8rJSfZeqH" +
                    "Q71jXXQD58rxsKGQi9R+FzXP3UFFhiDCmv43OXzvvd2Y/yCkAdAdLIC/oJHosxxV" +
                    "xGTBMJ5sD8CEtBYQmn832ItYliA80bxSsZSydLjii52A8Zgww/lVRRxhxZBGSJBp" +
                    "bouFyoVXN9M8phccWcR0u5NqeoE1xlZEOIwq8WdFSSJDePX4V7lp63h7vzltewMa" +
                    "wcAQWIduBM9tp8Q4rC9ky4btDtGhuQrPykDsaJjd8EErwxZcqvwFpR8cKP5ZzL6n" +
                    "XSExQoBfTCxvjzUwMhQUvKrVDkuZEr5w6wDM/He6ot12YanSSKGy+sCPLE8ISQdO" +
                    "SCOq8nVj2ZpEQGuJ9Jseab7kk1br83Gba4HMQMSiP4FryvL1IoaSRzR7lE6g6zlv" +
                    "nEtkgQaqeGsEj9koXvFr5jISudkxsvb0p/VKq77PWO/QDmWULx8vlfANsK5FFbej" +
                    "8GUc+PWO2lZS9u243q1rO7lKsJBJXXKQu//pX5bnqhXFU+KgMqrwn2KGrKmMuTuI" +
                    "AOGkzhMOuNyXwi2TwkfcXbx2W17lDnKpJB055ma26WbLbYaj+9PoR9eiR8RJw7Wj" +
                    "Mgazx1CoeWSc1g4FP2rSeDmfzdJP7/axFdQDFLdMRSAC4yxjoUtQd60EZ1IkrHha" +
                    "FPBIx58/Ird2RFKlafQhYn2DWCLqG2S8iCFW8SfqAlFej1EtJ1+dp7YE1xA3lYdG" +
                    "SqNqEEXJbx7F7wvvKpyiIV9jMqqNcSxb0jaS77fNR87Dvmim8XXopH9HjlPNi2hy" +
                    "t5Dq/U2BlyW0Y7Fx2R+qUG4z0ggjKJaju/OsWQEHwIjFzY2+KNEamVT6haw25h4R" +
                    "9deoPIxexN374kYMuImzEcnk1j7To+/mXSzELhHpq50ksBZROfNOMkb2b+BCuuQg" +
                    "ieo6VmIAwlTWcnctUS8k27hS0Fu0MW4IDO3v+UGcjSADg5INMhHdCPJX27ZhIGDP" +
                    "6t7+ajORSrox6Ay6V77KArj0x2FbC4BFt2OG1ecPkQqx9SLw/aRytMRFUSAUoKGj" +
                    "mWPthCcRanHEEtQemSLoME21aHODOTlZnRi8Vbmwi/Ya09kMO75ETsX2/SDFnKuQ" +
                    "Ns4avuXeAgqPb2ppCl4z0+6UF8sRvmbRB818lOZM6cOj2l8o7++rJFZUqAudFqs3" +
                    "N+MLuMkv6mZ+rwZEOa04pY4c27akStwkyas3RRREUdVdaPZ/vDsxspIn1kZHFMT1" +
                    "WiMwfpTgpRKbDCTn1Vo4+UCUmRbDmBVmBS7KOYMCbePvaSQq2PBrzdrLPhiNJG55" +
                    "IIyKT18+bOMH+oxTLDOqxOktRIkt1igEhsb/gkN7btozeO4cZ+ByIpGXrZ/6ln7+" +
                    "b0yW3l3aztLS87QDyr4TIkEWh2CH/Q3t5/FKvFY14oYINq4E6tObK6FzMiGG7mxe" +
                    "X0BYGOL/h5/uUQcg0fySqfwpSQn1QDmALbDmk7Y4vM3Pe8UBKoUBxBPeIQwqrcN0" +
                    "/Bn332cikmGfCZnzxgzXsSil90TL1/OKjAq9pOPb6MJ8NPBVsxv5Cr0kcuqgtd4v" +
                    "w/Fl57nwRIfj6dPO1lt1/7EZKbasJ9A16k9VAfgATACN9o0wTYNKZgKJAjYEGAEI" +
                    "ACAWIQTct/MxnneQUmrWIj9dOYz6fX8XkwUCYfBgSAIbDAAKCRBdOYz6fX8Xk5SA" +
                    "D/0bYADH1bzcQIAVbtXrxmS5s154j+OQDjgAlXi0adnTiMuybszk18ih9eIlDi17" +
                    "MFd2Xx6BXP03DTBGgPfktlbK+3pl+04uUCS3jQsZgXHbuQSeHkH6FuoCfXBm08f5" +
                    "eNhjx4YVIZq1csXCHp95VHG+RXdISgrBtRELSnq01xCeR8d74RWngYK521fmSYp/" +
                    "ET2xCPwcZJ15b2Mmwsimpf6ecZopLkgaGW6YCpHE4aUTd34VbPXXVukUbWIEsDIm" +
                    "6sNFLG2DRGjDtoboVt+0NPiFX7j68UDdeFyxpx+GGHlgZcwRWld68F+CgVmVCKoV" +
                    "aS3oNftHcLirhV+G6Wikj0rfaJRo14dYTXtUnaInPaiJFtnQdr9Ubl435UqgzEee" +
                    "hJKR1xEiQ1L6W1GlE8VPhkzyv62FPXIP81AXxBgwHKy7SGPzK5ldgJC5uEbfc2Mq" +
                    "C2hVmGqbYa16YmbU7k8tv6Zj7PrCX4UnKC6AOyvXSEpuS5NL0uRegx6VA1QhYzLp" +
                    "UuTRYqaAQG0IF7mqOTXjox9v6oJqFKxNr25le6kzq19gR3PCyCLxwWR03MnjbWQl" +
                    "lczzZwG8z/jljpO9+N61/vOvu9R/IEDp9Y2n8QrhmgU4jJUsnUFMZ3ow7yqNJaWG" +
                    "xUgYmCid0IGaWteAVh9xmvtxiKcaDs8IAudpjg4Su/YEDw==\n" +
                    "=F7eI\n" +
                    "-----END PGP PRIVATE KEY BLOCK-----\n"
            println key
            def password = System.getenv("SIGNING_PASSWORD")
            useInMemoryPgpKeys(key, password)
            sign configurations.archives
        }
    }

}

