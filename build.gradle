allprojects {
    apply plugin: "java-library"

    ext {
        gdxVersion = '1.10.0'
        gdxControllersVersion = '2.2.1'
        graalvmVersion = '22.0.0'
    }

    group 'io.github.anyicomplex'

    repositories {
        mavenCentral()
    }

    dependencies {
        api "org.graalvm.nativeimage:svm:$graalvmVersion"
    }

}

dependencies {
    implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
}

subprojects {
    dependencies {
        implementation project(":")
    }
}

project(":backends:lwjgl3") {
    version gdxVersion + '-beta3'
    dependencies {
        // Compile GraalVM platform library
        compileOnly "org.graalvm.nativeimage:svm-hosted-native-linux-amd64:$graalvmVersion"
        compileOnly "org.graalvm.nativeimage:svm-hosted-native-windows-amd64:$graalvmVersion"
        compileOnly "org.graalvm.nativeimage:svm-hosted-native-darwin-amd64:$graalvmVersion"
        implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    }
}

project(":extensions:box2d") {
    version gdxVersion + '-beta3'
    dependencies {
        implementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
    }
}

project(":extensions:bullet") {
    version gdxVersion + '-beta3'
    dependencies {
        implementation "com.badlogicgames.gdx:gdx-bullet:$gdxVersion"
    }
}

project(":extensions:freetype") {
    version gdxVersion + '-beta3'
    dependencies {
        implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
    }
}

project(":extensions:controllers-core") {
    version gdxControllersVersion + '-beta3'
    dependencies {
        implementation "com.badlogicgames.gdx-controllers:gdx-controllers-core:$gdxControllersVersion"
    }
}

project(":extensions:controllers-desktop") {
    version gdxControllersVersion + '-beta3'
    dependencies {
        implementation "com.badlogicgames.gdx-controllers:gdx-controllers-desktop:$gdxControllersVersion"
    }
}

project(":extensions:controllers-moe") {
    version gdxControllersVersion + '-beta3'
    dependencies {
        //Dependencies coming
    }
}

configure([
        project(":"),
        project(":backends:lwjgl3"),
        project(":backends:moe"),
        project(":extensions:box2d"),
        project(":extensions:bullet"),
        project(":extensions:freetype"),
        project(":extensions:controllers-core"),
        project(":extensions:controllers-desktop"),
        //project(":extensions:controllers-moe"),

]) {
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    java {
        withJavadocJar()
        withSourcesJar()
    }
    publishing {
        publications {
            mavenJava(MavenPublication) {
                def idStr = rootProject.name
                if (project.name != rootProject.name) {
                    idStr += "-"
                    idStr += project.parent.name.substring(0, project.parent.name.length() - 1)
                    idStr += "-"
                    idStr += project.name
                }
                artifactId = idStr
                groupId = project.group
                version = project.version
                from components.java
                pom {
                    def nameStr = "libGDX Graal Helper"
                    if (project.name != rootProject.name) {
                        nameStr += " ("
                        nameStr += project.parent.name.substring(0, 1).toUpperCase()
                        nameStr += project.parent.name.substring(1, project.parent.name.length() - 1)
                        nameStr += " "
                        nameStr += project.name.substring(0, 1).toUpperCase()
                        nameStr += project.name.substring(1, project.name.length())
                        nameStr += ")"
                    }
                    name = nameStr
                    description = 'Experimental helper for libGDX to build GraalVM native-image.'
                    url = 'https://github.com/anyicomplex/gdx-graalhelper'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'anyicomplex'
                            name = 'Yi An'
                            email = 'anyicomplex@protonmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:https://github.com/anyicomplex/gdx-graalhelper.git'
                        developerConnection = 'scm:git:git@github.com:anyicomplex/gdx-graalhelper.git'
                        url = 'https://github.com/anyicomplex/gdx-graalhelper/tree/main'
                    }
                }
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
            }
        }
        repositories {
            maven {
                name = "OSSRH"
                credentials {
                    username = System.getenv("MAVEN_USERNAME")
                    password = System.getenv("MAVEN_PASSWORD")
                }
                if (project.version.endsWith("-SNAPSHOT")) {
                    url "https://s01.oss.sonatype.org/content/repositories/snapshots"
                } else {
                    url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
                }
            }
        }
    }

    signing {
        def key = System.getenv("SIGNING_KEY")
        def password = System.getenv("SIGNING_PASSWORD")
        useInMemoryPgpKeys(key, password)
        sign publishing.publications.mavenJava
    }

}

